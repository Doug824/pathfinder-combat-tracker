.playsheet {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 20px;
  overflow: visible;
  -webkit-overflow-scrolling: touch;
}

/* Make the abilities section span full width */
.playsheet-section.abilities {
  grid-column: 1 / -1;
}

/* Combat stats sections */
.playsheet-section {
  background-color: var(--bg-secondary);
  border-radius: 8px;
  padding: 16px;
  box-shadow: var(--card-shadow);
  margin-bottom: 20px;
  overflow: visible;
}

.playsheet-section h3 {
  margin-top: 0;
  margin-bottom: 16px;
  color: var(--highlight-color);
  border-bottom: 1px solid var(--border-color);
  padding-bottom: 8px;
  font-size: 1.3rem;
}

/* Enhanced stat display for attack and defense rows */
.attack-row, .defense-row, .save-row {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 10px;
  border-radius: 6px;
  margin-bottom: 8px;
  background-color: var(--bg-primary);
}

.attack-row:nth-child(odd), .defense-row:nth-child(odd), .save-row:nth-child(odd) {
  background-color: var(--bg-tertiary);
}

.attack-name, .defense-name, .save-name {
  font-weight: bold;
  font-size: 1.1rem;
}

.attack-value, .defense-value, .save-value {
  font-weight: bold;
  font-size: 1.6rem;
  color: var(--highlight-color);
  min-width: 80px;
  text-align: center;
}

/* Damage display */
.damage-mod {
  margin-top: 16px;
  padding: 12px;
  background-color: var(--bg-tertiary);
  border-radius: 6px;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.damage-label {
  font-weight: bold;
  font-size: 1.1rem;
}

.damage-value {
  font-weight: bold;
  font-size: 1.6rem;
  color: var(--highlight-color);
}

/* Weapon configuration */
.weapon-config {
  display: flex;
  flex-direction: column;
  gap: 20px;
  margin-bottom: 20px;
}

.offhand-attacks {
  margin-top: 20px;
}

.offhand-attacks h4 {
  margin-top: 0;
  margin-bottom: 15px;
  padding-bottom: 8px;
  border-bottom: 1px solid var(--border-color);
  font-size: 1.1rem;
}

.primary-weapon, .offhand-weapon {
  background-color: var(--bg-primary);
  padding: 15px;
  border-radius: 6px;
  box-shadow: var(--card-shadow);
}

.primary-weapon h4, .offhand-weapon h4 {
  margin-top: 0;
  margin-bottom: 15px;
  color: var(--highlight-color);
  border-bottom: 1px solid var(--border-color);
  padding-bottom: 8px;
}

/* Control toggles */
.playsheet-controls {
  display: flex;
  gap: 16px;
  align-items: center;
  margin-bottom: 16px;
  flex-wrap: wrap;
}

.haste-toggle, .twf-toggle {
  display: flex;
  align-items: center;
  gap: 8px;
  cursor: pointer;
  background-color: var(--bg-primary);
  padding: 8px 12px;
  border-radius: 4px;
  min-height: 44px; /* Minimum touch target size */
}

.haste-toggle input, .twf-toggle input {
  margin: 0;
  min-width: 22px;
  min-height: 22px;
}

/* Weapon selector buttons */
.damage-modifier-select {
  margin-bottom: 15px;
}

.weapon-selector {
  background-color: var(--bg-tertiary);
  border: none;
  padding: 10px 15px;
  margin-right: 10px;
  border-radius: 4px;
  cursor: pointer;
  min-height: 44px;
}

.weapon-selector.active {
  background-color: var(--highlight-color);
  color: white;
}

/* Combat abilities section */
.ability-toggle-row {
  padding: 12px;
  border-radius: 6px;
  margin-bottom: 8px;
  background-color: var(--bg-primary);
  transition: background-color 0.2s;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.ability-toggle-row:hover {
  background-color: var(--bg-tertiary);
}

.ability-toggle {
  display: flex;
  align-items: center;
  gap: 8px;
  cursor: pointer;
  flex: 1;
  min-height: 44px; /* Minimum touch target size */
}

.ability-name {
  font-weight: bold;
  font-size: 1.1rem;
}

.ability-active-effects {
  display: flex;
  flex-wrap: wrap;
  gap: 6px;
  margin-top: 8px;
}

.ability-effect {
  padding: 4px 10px;
  background-color: var(--active-color);
  color: white;
  border-radius: 4px;
  font-size: 0.9rem;
  font-weight: bold;
}

/* Attack section */
.attack-section {
  margin-top: 20px;
  background-color: var(--bg-tertiary);
  border-radius: 6px;
  padding: 12px;
}

.attack-section h4 {
  margin-top: 0;
  margin-bottom: 10px;
  font-size: 1.1rem;
}

.attack-summary {
  text-align: center;
  font-weight: bold;
  font-size: 1.1rem;
  padding: 8px;
  background-color: var(--bg-tertiary);
  border-radius: 4px;
  margin-top: 10px;
}

/* Variable input styling */
.ability-variable-input {
  background-color: var(--bg-secondary);
  padding: 8px 12px;
  border-radius: 4px;
  margin-top: 8px;
}

.ability-variable-input label {
  display: flex;
  align-items: center;
  gap: 8px;
  font-size: 0.9rem;
}

.ability-variable-input input {
  width: 60px;
  padding: 4px 8px;
  border: 1px solid var(--border-color);
  border-radius: 4px;
  background-color: var(--bg-primary);
  color: var(--text-primary);
  font-size: 1rem;
  text-align: center;
}

/* Mini HP Tracker for Playsheet */
.mini-hp-tracker {
  margin-bottom: 20px;
}

.mini-hp-tracker .hp-quick-actions,
.mini-hp-tracker .hp-edit-container {
  display: none;
}

.mini-hp-tracker .hp-header {
  font-size: 1.1rem;
  margin-bottom: 10px;
  padding-bottom: 5px;
}

.mini-hp-tracker .hp-visual-container {
  flex-direction: row;
  align-items: center;
  padding: 8px;
}

.mini-hp-tracker .hp-heart {
  width: 40px;
  height: 40px;
}

.mini-hp-tracker .hp-values {
  font-size: 1.5rem;
  margin-bottom: 4px;
}

/* Negative levels styling */
.negative-levels-indicator {
  margin-bottom: 15px;
  padding: 8px 12px;
  background-color: rgba(var(--error-color-rgb, 192, 57, 43), 0.1);
  border-left: 4px solid var(--error-color);
  color: var(--error-color);
  font-weight: bold;
  border-radius: 4px;
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.negative-levels-warning {
  font-size: 0.9rem;
}

.negative-level-indicator {
  color: var(--error-color);
  font-size: 0.8rem;
  font-weight: bold;
}

/* Attack value containers with negative level indicators */
.attack-value-container {
  display: flex;
  align-items: center;
  gap: 4px;
}

/* Make the attack and defense rows cleaner */
.attack-row, .defense-row, .save-row {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 10px 12px;
  border-radius: 6px;
  margin-bottom: 8px;
  background-color: var(--bg-primary);
}

/* Position the negative level indicator correctly */
.save-row .attack-value-container,
.defense-row .attack-value-container {
  display: flex;
  align-items: center;
  justify-content: flex-end;
}

/* Responsive adjustments */
@media (max-width: 992px) {
  .playsheet {
    grid-template-columns: 1fr;
  }
  
  .attack-value, .defense-value, .save-value {
    font-size: 1.4rem;
    min-width: 60px;
  }
}

/* Mobile-specific improvements */
@media (max-width: 768px) {
  /* Switch to flex layout for better mobile experience */
  .playsheet {
    display: flex;
    flex-direction: column;
    gap: 15px;
  }
  
  /* Make sections more compact on mobile */
  .playsheet-section {
    padding: 12px;
    margin-bottom: 15px;
  }
  
  /* Smaller headings */
  .playsheet-section h3 {
    font-size: 1.1rem;
    margin-bottom: 12px;
  }
  
  /* Make cards more compact */
  .attack-row, .defense-row, .save-row {
    padding: 8px 10px;
    margin-bottom: 6px;
  }
  
  /* Smaller text on mobile */
  .attack-name, .defense-name, .save-name {
    font-size: 0.95rem;
  }
  
  .attack-value, .defense-value, .save-value {
    font-size: 1.1rem;
    min-width: auto;
  }
  
  /* Stack control toggles on mobile */
  .playsheet-controls {
    flex-direction: column;
    align-items: flex-start;
    gap: 8px;
  }
  
  .haste-toggle, .twf-toggle {
    width: 100%;
    justify-content: space-between;
  }
  
  /* Stack form rows on mobile */
  .weapon-form .form-row {
    flex-direction: column;
    gap: 8px;
  }
  
  /* Make ability toggles more touch-friendly */
  .ability-toggle-row {
    flex-wrap: wrap;
    gap: 8px;
  }
  
  .ability-toggle {
    width: 100%;
  }
  
  .toggle-switch {
    margin-left: auto;
  }
  
  /* Make the damage modifier select better on mobile */
  .damage-modifier-select .form-row {
    display: flex;
    flex-direction: row;
  }
  
  .weapon-selector {
    flex: 1;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    font-size: 0.9rem;
  }
  
  /* Bottom padding to prevent content from being hidden */
  .playsheet-section.abilities {
    margin-bottom: 60px;
  }
}
/* Mobile-specific improvements */
@media (max-width: 768px) {
  /* Switch to flex layout for better mobile experience */
  .playsheet {
    display: flex !important;
    flex-direction: column !important;
    gap: 15px;
    overflow: visible !important; /* Force visible overflow */
    width: 100% !important; /* Ensure full width */
    padding-bottom: 120px !important; /* Add extra bottom padding */
  }
  
  /* Make sure sections don't get cut off */
  .playsheet-section {
    width: 100% !important; /* Ensure full width */
    box-sizing: border-box !important;
    overflow: visible !important; /* Prevent content hiding */
    max-width: 100%; /* Prevent horizontal overflow */
  }
  
  /* Ensure the right column doesn't have hidden overflow */
  .playsheet-right-column {
    width: 100% !important;
    overflow: visible !important;
    display: flex !important;
    flex-direction: column !important;
  }
  
  /* Make sure dice roller doesn't have restricted width */
  .playsheet-section.dice-roller {
    width: 100% !important;
    overflow: visible !important;
  }
  
  /* Ensure abilities section has plenty of space */
  .playsheet-section.abilities {
    width: 100% !important;
    overflow: visible !important;
    margin-bottom: 120px !important; /* Add extra space at the bottom */
    padding-bottom: 50px !important;
  }
  
  /* Make ability toggle rows more accessible */
  .ability-toggle-row {
    flex-direction: column !important;
    align-items: flex-start !important;
    padding: 15px !important;
    margin-bottom: 15px !important;
  }
  
  /* Full width toggles */
  .ability-toggle {
    width: 100% !important;
    margin-bottom: 10px !important;
  }
  
  /* Position toggle switches properly */
  .toggle-switch {
    align-self: flex-end !important;
    margin-top: 10px !important;
  }
  
  /* Make variable input area easier to tap */
  .ability-variable-input {
    width: 100% !important;
    padding: 10px !important;
    margin: 10px 0 !important;
  }
  
  /* Ensure better spacing for active effects */
  .ability-active-effects {
    width: 100% !important;
    margin: 10px 0 !important;
  }
  
  /* Fix for haste attack special styling */
  .attack-row.haste-attack {
    margin-left: 0 !important;
    margin-right: 0 !important;
    width: 100% !important;
  }
}